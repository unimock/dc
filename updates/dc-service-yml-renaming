#!/bin/bash


if [ "$1" = "" ] ; then
  echo "usage: "
  echo ""
  echo "  modify      # "
  echo "  show        # print dc-service.yml files"
  echo "  activate    # "
  echo "  reset       # "
  echo "  cleanup     # remove dc-service.yml.origin and dc-service.yml.version2"
  exit 0
fi


list=$(find /root/Services -name "*dc-service.yml*" )

if [ "$1" = "show" ] ; then
  for i in $list ; do
    
    echo " - $i"
  done
  exit 0
fi  

if [ "$1" = "cleanup" ] ; then
  list=$(find /root/Services -name "dc-service.yml" )
  for i in $list ; do
    rm -f $i.version2
    rm -f $i.origin
  done
  exit 0
fi

if [ "$1" = "modify" ] ; then
  list=$(find /root/Services -name "dc-service.yml" )
  for i in $list ; do
    verz=$( dirname $i )
    cp $i $verz/dc-project.yml
    rm $i 
  done

  sed -i "s/dc-service.yml/dc-project.yml/g" /opt/dc/etc/config    


  
  echo ""
  echo "TDOD:"
  echo ""
  echo " - check and fix:"
  echo '   find    config batch cron scripts utils hc-scripts  -name "*dc-service.yml*" 2>/dev/null'
  echo '   grep -r "dc-service.yml"  config batch cron scripts utils hc-scripts 2>/dev/null'
  echo ""
  echo "   i=<file>"
  echo '   sed -i "s|dc-service.yml|dc-project.yml|g" $i'
  echo ""
  echo "/opt/dc/updates/dc-service-yml-renaming show"
  echo "re-login"
  echo "dc-config rebuild"
  echo "dc-config check"
  echo "dc-inspect runtime"
  echo ""
  echo ""
  exit 0
fi

exit 0








if [ "$1" = "modify" ] ; then
  for i in $list ; do
    if [ ! -f $i.origin ] ; then
       cp $i $i.origin
    fi 
    rm -f $i.version2
    unset service_hosts
    unset service_state
    unset version
    eval $( dc-yml -c $i )
    anz_hosts=${!service_hosts[@]}
    anz_state=${!service_state[@]}
    echo "($version) $i"
    if [ "$version" != "1" ] ; then
      echo "error: unkown version"
      exit 1
    fi
    if [ "$anz_hosts" != "$anz_state" -o "${service_hosts[0]}"  = "" -o "${service_state[0]}"  = "" ] ; then
      echo "error: anz_state=$anz_state anz_hosts=$anz_hosts"
      exit 1
    fi
    cat $i |  grep -o '^[^#]*' | sed '/^[[:space:]]*$/d' >  $i.version2
    echo "  home:"  >> $i.version2
    for h in "${!service_hosts[@]}"; do
      if [ "${service_state[$h]}" != "active" ] ; then
        echo "warning: ${service_state[$h]} != active"
      fi
      echo "    - type: default"  >> $i.version2
      echo "      state: ${service_state[$h]}" >> $i.version2
      echo "      host:  ${service_hosts[$h]}"  >> $i.version2
    done
    sed -i 's| name:| main_service:|g' $i.version2
    sed -i 's| project_name:| overrule_compose_name:|g' $i.version2
    sed -i 's| config_check: false| ignore_volume_check: true|g' $i.version2
    sed -i 's|^service:|project:|g' $i.version2

    dc-yq -i 'del(.project.hosts)' $i.version2
    dc-yq -i 'del(.project.state)' $i.version2
    dc-yq -i 'del(.project.desc)' $i.version2
    dc-yq -i '.project.desc = "description of the dc project"' $i.version2

  done
fi

if [ "$1" = "activate" ] ; then
  for i in $list ; do
    cp -v $i.version2 $i
  done
fi

if [ "$1" = "reset" ] ; then
  for i in $list ; do
    cp -v $i.origin $i
  done
fi

exit 0

