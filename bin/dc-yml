#!/bin/bash


. /opt/dc/etc/config


####################################################################################################################################
parse_yaml() {
    local prefix=$2
    local s
    local w
    local fs
    s='[[:space:]]*'
    w='[a-zA-Z0-9_]*'
    fs="$(echo @|tr @ '\034')"
    sed -ne "s|^\($s\)\($w\)$s:$s\"\(.*\)\"$s\$|\1$fs\2$fs\3|p" \
        -e "s|^\($s\)\($w\)$s[:-]$s\(.*\)$s\$|\1$fs\2$fs\3|p" "$1" |
    awk -F"$fs" '{
      indent = length($1)/2;
      if (length($2) == 0) { conj[indent]="+";} else {conj[indent]="";}
      vname[indent] = $2;
      for (i in vname) {if (i > indent) {delete vname[i]}}
      if (length($3) > 0) {
              vn=""; for (i=0; i<indent; i++) {vn=(vn)(vname[i])("_")}
              printf("%s%s%s%s=(\"%s\")\n", "'"$prefix"'",vn, $2, conj[indent-1],$3);
      }
    }' | sed 's/_=/+=/g'
}
####################################################################################################################################
show_help() {
  echo ""
  echo " usage: `basename $0` [-c <yml-file>] [ <variable [index]] ... get yml entry"
  echo ""
  exit 0
}

####################################################################################################################################
#
# magic main
#
####################################################################################################################################
YML=""
VERB=""

CURROPT=""
while [ "$#" -gt 0 ]; do
  case "$1" in
    -c) YML="$2" ;    shift 2 ;;
    -v) VERB="1"  ;    shift 1 ;;
    *)  CURROPT="$CURROPT \"$1\"" ; shift 1 ;;
  esac
done
eval set -- $CURROPT

VAR="$1"

if [ "$YML" != "" ] ; then
   if [ ! -f $YML ] ; then
     echo "error: <$YML> missing."
     exit 1
   fi
else
  if [ -f ./dc-service.yml ] ; then YML="./dc-service.yml" ; fi
fi



if [ "$VAR" = "" ] ; then
  parse_yaml $YML
  exit 0
fi

eval "$(parse_yaml $YML)"
echo ${!VAR}

exit 0

