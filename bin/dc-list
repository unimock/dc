#!/bin/bash

. /opt/dc/funcs/global

opt_sort=""

CURROPT=""
while [ "$#" -gt 0 ]; do
  case "$1" in
    --sort)  opt_sort="$2"  ; shift 2 ;;
    --state) opt_state="$2" ; shift 2 ;;
    -n)      on_node="$2"   ; shift 2 ;;
    -g)      group="$2"     ; shift 2 ;;
    *)  CURROPT="$CURROPT \"$1\"" ; shift 1 ;;
  esac
done
eval set -- $CURROPT

CMD="$1"

if [ "$CMD" = "" ] ; then
  echo ""
  echo " usage: `basename $0` [<optinons>] <command>"
  echo "   options:"
  echo""
  echo "       -g ................... print apps for a group"
  echo "       -n ................... print apps defined for a node"
  echo ""
  echo "    commands:"
  echo ""
  echo "       nodes all ............ list all nodes, which are defined in '${MDE_DC_HOST_DIR}/*/node.yml' as state=active|standby"
  echo "       nodes dc ............. list all nodes, which are defined in '${MDE_DC_HOST_DIR}/*/node.yml' AND group=dc"
  echo "       nodes used ........... list all nodes, which are used in services"
  echo "       apps [-n|-g|--sort run_level|--state active|disabled] ..... list services"
  echo ""
  exit 0
fi

if [ "$CMD" = "nodes" ] ; then
  if [ "$2" = "" -o  "$2" = "all" ] ; then
    dc-ls --short | sort
  elif [ "$2" = "dc" ] ; then
    dc-yq '((.nodes.* | select (.type == "dc" )) | path) [-1]' | sort
    #dc-ls --group=dc --short | sort
  elif [ "$2" = "used" ] ; then
    dc-yq '.apps.*.dc.home.[].node'   ${MDE_DC_YAML} | sort | uniq
  fi
  exit 0
fi

if [ "$CMD" = "apps" ] ; then
  shift
  if [ "$on_node" != "" ] ; then
    if [ "$opt_sort" = "run_level" ] ; then
      run_levels=$( dc-yq  '.apps.*.dc.run_level' | sort | uniq  )   # 5 4     -> stop
      app_list=""
      for rl in $run_levels ; do
        app_list="$app_list $(dc-yq '(( .apps.* | select(.dc.run_level == "'$rl'") | select(.dc.home.[].node == "'$on_node'") | path ) [-1] )')"
      done
    else
      app_list=$( dc-yq  '(( .apps.* | select(.dc.home.[].node == "'$on_node'" ) | path ) [-1] )' ${MDE_DC_YAML} )
    fi
  else
    app_list=$(dc-yq '(.apps.[] | path ) [-1]'   ${MDE_DC_YAML})
  fi
  for p in $app_list ; do
    if [ "$opt_state" != "" ] ; then
       state=$(dc-yq '.apps.'$p'.dc.home.[0].state')
       # dc-yq '.apps.'$p'.dc.home.[].state'
       #echo "$opt_state : $p = $state "
       if [ "$opt_state" != $state ] ; then
         continue
      fi
    fi
    if [ "$group" != "" ] ; then
      groups=$( dc-yq '.apps.'$p'.dc.group[]'  ${MDE_DC_YAML}  )
      found_in_group="0"
      for g in $groups ; do
        if [ "$g" = "$group" ] ; then
          found_in_group="1"
        fi
      done
      if [ "$found_in_group" = "0" ] ; then
        continue
      fi
    fi
    echo "$p"
  done
fi
exit 0

