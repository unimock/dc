#!/bin/bash
. /opt/dc/etc/config

print_yml="0"

CURROPT=""
while [ "$#" -gt 0 ]; do
  case "$1" in
    -y) print_yml="1" ; shift 1 ;;
    -s) service="$2" ; shift 2 ;;
    -h) on_host="$2" ; shift 2 ;;
    -g) group="$2"   ; shift 2 ;;
    *)  CURROPT="$CURROPT \"$1\"" ; shift 1 ;;
  esac
done
eval set -- $CURROPT

CMD="$1"

if [ "$CMD" = "" ] ; then
  echo ""
  echo " usage: `basename $0` [<optinons>] <command>"
  echo "   options:"
  echo""
  echo "       -y ................... print yml-config-file instaed of name"
  echo "       -g ................... print services for a group"
  echo "       -h ................... print services defined for a host"
  echo ""
  echo "    commands:"
  echo ""
  echo "       active_hosts ......... list all hosts, which are configured as active in ndc-host.yml"
  echo "       used_hosts ........... list all hosts, which are used in services"
  echo "       services [-h|-g] ..... list services"
  echo "       images [-h] ........... list images"
  exit 0
fi

if [ "$CMD" = "active_hosts" ] ; then
  list=`find  $MDE_DC_HOST_DIR -type f -name dc-host.yml`
  for i in $list ; do
    state=$( dc-yml  -c $i host_state )	  
    if [ "$state" = "active" ] ; then
      echo `basename ${i%/dc-host.yml}`
    fi	    
  done	  
  exit 0
fi

if [ "$CMD" = "used_hosts" ] ; then
  result=()
  flist=$( find $MDE_DC_SERV_DIR/ -name dc-service.yml )
  for s in $flist ; do
    i=0 
    while true ; do
      h=$(dc-yml  -c $s service_hosts[$i])
      [[ "$h" = "" ]] && break
      i=$((i + 1))
      # check if host exists in result array
      found=0 
      for item in "${result[@]}"; do
        if [ "$h" = "$item" ] ; then
          found=1
          break
        fi
      done
      [[ $found = 0 ]] && result+=("$h")
    done
  done
  echo  ${result[*]}  |tr " " "\n"|sort|tr "\n" " "
  echo ""
fi

if [ "$CMD" = "services" ] ; then
  shift

  result=()
  flist=$( find $MDE_DC_SERV_DIR/ -name dc-service.yml )
  for s in $flist ; do
    name=$(dc-yml -c $s service_name)
    if [ "$service" != "" -a "$service" != "$name" ] ; then
      continue
    fi
    if [ "$group" != "" ] ; then
      g=$(dc-yml -c $s service_group) 
      if [ "$g" != "$group" ] ; then
        continue
      fi
    fi  
    if [ "$on_host" != "" ] ; then
      i=0 
      while true ; do
        h=$(dc-yml  -c $s service_hosts[$i])
        [[ "$h" = "" ]] && break
        if [ "$h" = "$on_host" ] ; then
          if [ "$print_yml" = "1" ] ; then
             result+=("$s")
          else
             result+=("$name")
          fi
          break
        fi
        i=$((i + 1))
      done
    else
      if [ "$print_yml" = "1" ] ; then
        result+=("$s")
      else
        result+=("$name")
      fi
    fi
  done
  printf '%s\n' "${result[@]}" 
  #echo ${result[*]} | sort
fi
exit 0

