#!/bin/bash

. /opt/dc/funcs/global

opt_sort=""

CURROPT=""
while [ "$#" -gt 0 ]; do
  case "$1" in
    --sort) opt_sort="$2" ; shift 2 ;;
    -h) on_host="$2"      ; shift 2 ;;
    -g) group="$2"        ; shift 2 ;;
    *)  CURROPT="$CURROPT \"$1\"" ; shift 1 ;;
  esac
done
eval set -- $CURROPT

CMD="$1"

if [ "$CMD" = "" ] ; then
  echo ""
  echo " usage: `basename $0` [<optinons>] <command>"
  echo "   options:"
  echo""
  echo "       -g ................... print projects for a group"
  echo "       -h ................... print projects defined for a host"
  echo ""
  echo "    commands:"
  echo ""
  echo "       hosts all ............ list all hosts, which are defined in '${MDE_DC_HOST_DIR}/*/host.yml' as state=active|standby"
  echo "       hosts dc ............. list all hosts, which are defined in '${MDE_DC_HOST_DIR}/*/host.yml' AND group=dc"
  echo "       hosts used ........... list all hosts, which are used in services"
  echo "       projects [-h|-g|--sort run_level]  ..... list services"
  echo ""
  exit 0
fi

if [ "$CMD" = "hosts" ] ; then
  if [ "$2" = "" -o  "$2" = "all" ] ; then
    dc-ls --short | sort
  elif [ "$2" = "dc" ] ; then
    dc-yq '((.hosts.* | select (.type == "dc" )) | path) [-1]' | sort
    #dc-ls --group=dc --short | sort
  elif [ "$2" = "used" ] ; then
    dc-yq '.projects.*.dc.home.[].host'   ${MDE_DC_YAML} | sort | uniq
  fi
  exit 0
fi

if [ "$CMD" = "projects" ] ; then
  shift
  if [ "$on_host" != "" ] ; then
    if [ "$opt_sort" = "run_level" ] ; then
      run_levels=$( dc-yq  '.projects.*.dc.run_level' | sort | uniq  )   # 5 4     -> stop
      project_list=""
      for rl in $run_levels ; do
        project_list="$project_list $(dc-yq '(( .projects.* | select(.dc.run_level == "'$rl'") | select(.dc.home.[].host == "'$on_host'") | path ) [-1] )')"
      done
    else
      project_list=$( dc-yq  '(( .projects.* | select(.dc.home.[].host == "'$on_host'" ) | path ) [-1] )' ${MDE_DC_YAML} )
    fi
  else
    project_list=$(dc-yq '(.projects.[] | path ) [-1]'   ${MDE_DC_YAML})
  fi
  for p in $project_list ; do
    if [ "$group" != "" ] ; then
      groups=$( dc-yq '.projects.'$p'.dc.group[]'  ${MDE_DC_YAML}  )
      found_in_group="0"
      for g in $groups ; do
        if [ "$g" = "$group" ] ; then
          found_in_group="1"
        fi
      done
      if [ "$found_in_group" = "0" ] ; then
        continue
      fi
    fi
    echo "$p"
  done
fi
exit 0

