#!/bin/bash

. /opt/dc/etc/config

if [ $(ps -o comm= $PPID) = "dc" ] ; then
  IAM="dc config"
else
  IAM="dc-config"
  dc-yml-cache refresh
fi

if [ "$1" = "" ] ; then
  echo ""
  echo "usage: $IAM check"
  echo "usage: $IAM create project <host> <project-name> <main-service-name> <project-directory>"
  echo ""
  echo "examples:"
  echo ""
  echo "$IAM show     # show dc configuration"
  echo "$IAM check    # check configuration"
  echo "$IAM create project apps0 test-project filebrowser /root/Services/test-project"
  echo ""
  exit 0
fi

if [ "$1" = "create" -a "$2" = "project" ] ; then
  shift ; shift
  host="$1"
  project_name="$2"    # must be unique
  main_service="$3"         # keep it simple, like git,...
  project_dir="$4"

  traefik_net="traefik_default"
  image="filebrowser/filebrowser:v2.25.0"

  if [ -d ${project_dir} ] ; then
    echo "error: ${project_dir} exists!"
    exit 1
  fi
  mkdir -p ${project_dir}
  echo "${project_dir} created"
  cp -r /opt/dc/templates/create-project/.         ${project_dir}/
  flist=$( find  ${project_dir} -type f)
  for i in $flist ; do
    sed -i "s|<project_name>|${project_name}|g"   $i
    sed -i "s|<main_service>|${main_service}|g"   $i
    sed -i "s|<host>|${host}|g"                   $i
    sed -i "s|<image>|${image}|g"                 $i
    sed -i "s|<traefik_net>|${traefik_net}|g"     $i
    echo "$i"
  done
  cd ${project_dir}
  dc up
  dc login ls /
  dc rm
  exit 0
fi

if [ "$1" = "show"  ] ; then
  cat /var/dc/dc.yml
fi  

if [ "$1" = "check" ] ; then
  hosts=$(dc-yq  '.*.dc.hosts.[]'   /var/dc/dc.yml | sort | uniq)
  for h in $host ; do
    if [ ! -f /root/.ssh/dc/config.$h ] ; then
      echo " ‚ùå missing host definition </root/.ssh/dc/config.$h>"
    fi
  done

  projects=$(dc-yq  '.* | path | .[-1]' /var/dc/dc.yml | sort)
  doubles=" "
  for p in $projects ; do
    config_check=$( dc-yq '.'$p'.dc.config_check' /var/dc/dc.yml )
    p_on_hosts=$( dc-yq '.'$p'.dc.hosts.[]' /var/dc/dc.yml )
    #echo "$p $config_check ($p_on_hosts)"
    #
    # check for not unique projects
    #
    if [ "$config_check" != "false" ] ; then
      if [[ "$doubles" == *" $p "* ]] ; then
        echo " üí°(1) not-uniqu:  $p"
      else
        doubles="$doubles $p "
      fi
    fi
    vol_list=$(dc-yq '.'$p'.compose.services.*.volumes.[].source' /var/dc/dc.yml | grep -v "^/etc/"  | grep -v "^/var/" | grep -v "^/lib/"  )
    for vol in $vol_list ; do
      if [ "$config_check" = "false" ] ; then
        continue
      fi
      #echo "  $vol" 
      if [[ "$vol" == "${MDE_DC_DOCKER_VOL}/Logs/$p"         || \
            "$vol" == "${MDE_DC_DOCKER_VOL}/Logs/$p/"*       || \
            "$vol" == "${MDE_DC_DOCKER_VOL}/Services/$p"     || \
            "$vol" == "${MDE_DC_DOCKER_VOL}/Services/$p/"*   || \
            "$vol" == "${MDE_DC_DOCKER_VOL}/Cache/$p"        || \
            "$vol" == "${MDE_DC_DOCKER_VOL}/Cache/$p/"*      || \
            "$vol" == "${MDE_DC_DOCKER_VOL}/Data/$p"         || \
            "$vol" == "${MDE_DC_DOCKER_VOL}/Data/$p/"*          \
         ]] ; then
        #echo "check if $vol exists on host"
        for h in $p_on_hosts ; do
          ssh $h ls -d $vol >/dev/null 2>&1
          if [ "$?" != "0" ] ; then
            echo " ‚ùå missing volume directory <$vol> on host <$h>"
          fi
        done
      else
        echo " üí°(2) volconfig:  $vol"
      fi
    done
  done
fi 
exit 0

