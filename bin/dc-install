#!/bin/bash

# tools
MACHINE="0.16.2"
COMPOSE="1.29.2"

# hcloud ... hetzner cloud
HCLOUD="1.22.1"

#
APT_LIST="tig pv tree sshfs sendemail libnet-ssleay-perl libio-socket-ssl-perl dialog qemu-guest-agent sshfs knockd micro"

if [ "$1" = "" ] ; then
  echo ""
  echo " usage `basename $0` <command>"
  echo "     commands:"
  echo "       init ....... initialize dc environment"
  echo "       tools ...... install additional tools. (pv, tree, dialog, docker-machine, docker-compose, ...)"
  echo "       hcloud ..... hcloud"
  echo "       docker ..... install docker-ce"
  echo ""
fi
CMD="$1"
if [ "$CMD" = "init" ] ; then
  ##############################################################
  FI=/opt/dc/etc/config
  if [ ! -f $FI ] ; then
    echo "creating dc default configuration file <$FI>"
    mkdir -p `dirname $FI`
    echo 'export MDE_DC_DIR=/root'                                  > $FI
    echo 'export MDE_DC_HOST_DIR=${MDE_DC_DIR}/.docker/hosts'      >> $FI
    echo 'export MDE_DC_TEMPL_DIR=${MDE_DC_DIR}/.docker/templates' >> $FI
    echo 'export MDE_DC_SERV_DIR=${MDE_DC_DIR}/Services'           >> $FI
    echo 'export MDE_DC_BATCH_DIR=${MDE_DC_DIR}/batch'             >> $FI
    echo 'export MDE_DC_LOG_DIR=${MDE_DC_DIR}/logs'                >> $FI
    echo 'export MDE_DC_CONFIG_DIR=${MDE_DC_DIR}/config'           >> $FI
  fi
  ##############################################################
  FI=/etc/profile.d/dc-profile.sh
  . /opt/dc/etc/config
  echo "creating dc profile <$FI>"
  rm -f $FI
  mkdir -p `dirname $FI`
  echo '. /opt/dc/etc/config'                                                     > $FI
  echo 'export PATH=$PATH:/opt/dc/bin:${MDE_DC_DIR}/utils:${MDE_DC_DIR}/scripts' >> $FI
  echo alias de="'"'__de() { eval "$(docker-machine env $1 )" ; }; __de'"'"      >> $FI
  . /etc/profile
  ##############################################################
  exit 0
fi
####################################################################################

if [ "$CMD" = "docker" ] ; then
  REL=$(lsb_release -cs)
  apt-get install -y apt-transport-https ca-certificates curl software-properties-common
  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  #add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) edge"
  echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu $REL stable" > /etc/apt/sources.list.d/docker.list
  apt-get update
  apt-get install -y docker-ce
  exit 0
fi
####################################################################################
if [ "$CMD" = "hcloud" ] ; then
  . /etc/profile
  
  VER=$( hcloud version | cut -d"v" -f2 )
  if [ "$VER" != "$HCLOUD" ] ; then
    VER=$HCLOUD
    TDIR=$( mktemp -d )
    curl -L https://github.com/hetznercloud/cli/releases/download/v${VER}/hcloud-linux-amd64.tar.gz >  $TDIR/hcloud-linux-amd64.tar.gz
    tar -C $TDIR -xzf $TDIR/hcloud-linux-amd64.tar.gz
    cp  $TDIR/hcloud /usr/local/bin
    chmod a+x /usr/local/bin/hcloud
    source <(hcloud completion bash)
    if ! grep -q "(hcloud completion bash)" /root/.bashrc ; then echo 'source <(hcloud completion bash)' >> /root/.bashrc ; fi
    rm -rf $TDIR 
    echo "install hcloud $VER"
  fi
  exit 0
fi
####################################################################################
if [ "$CMD" = "tools" ] ; then
  . /etc/profile

  if [ "${LC_ALL}" = "" ] ; then
    export LC_ALL=en_US.UTF-8
    update-locale LC_ALL=en_US.UTF-8
  fi



#  for i in $APT_LIST ; do
#    if [ "$( which $i )" = "" ] ; then
      apt-get update
      apt-get install -y $APT_LIST
#      break
#    fi 
#  done
 
  VER=$( docker-compose --version | awk '{ print $3 }' )
  VER=${VER%,}
  if [ "$VER" != "$COMPOSE" ] ; then
    curl -L https://github.com/docker/compose/releases/download/${COMPOSE}/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
    chmod +x /usr/local/bin/docker-compose
    docker-compose --version
  fi

  VER=$( docker-machine  --version | awk '{ print $3 }' )
  VER=${VER%,}
  if [ "$VER" != "$MACHINE" ] ; then
    curl -L https://github.com/docker/machine/releases/download/v${MACHINE}/docker-machine-`uname -s`-`uname -m` >/usr/local/bin/docker-machine
    chmod +x /usr/local/bin/docker-machine
    docker-machine --version
  fi
  exit 0
fi
