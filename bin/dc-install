#!/bin/bash

NGROK="2.2.8"
MACHINE="0.13.0"
COMPOSE="1.18.0"
RESTIC="0.8.0"


if [ "$1" = "" ] ; then
  echo ""
  echo " usage `basename $0` dc|tools"
  echo ""
  echo "       init ...... initialize dc environment"
  echo "       tools ... install additional tools. (pv, tree, ...)"
  echo "       docker .. install docker-ce"
  echo ""
fi
CMD="$1"
if [ "$CMD" = "init" ] ; then
  ##############################################################
  DCD=/opt/dc
  if [ -d $DCD ] ; then
    cd $DCD ; git pull
  else
    git clone https://github.com/unimock/dc.git $DCD
  fi
  ##############################################################
  FI=/etc/profile.d/dc-profile.sh
  echo -e "\ncreating dc profile <$FI> with following content:"
  rm -f $FI
  mkdir -p `dirname $FI`
  echo 'export PATH=$PATH:/opt/dc/bin'                                       >> $FI
  echo alias de="'"'__de() { eval "$(docker-machine env $1 )" ; }; __de'"'"  >> $FI
  cat $FI
  . /etc/profile
  ##############################################################
  FI=/opt/dc/etc/config

  if [ ! -f $FI ] ; then
    echo -e "\ncreating dc default configuration file <$FI> with following defines:"
    mkdir -p `dirname $FI`
    echo 'export MDE_DC_HOST_DIR=/root/.docker/hosts' >> $FI
    echo 'export MDE_DC_SERV_DIR=/root/Services'      >> $FI
    cat $FI
  fi
  exit 0
fi

if [ "$CMD" = "docker" ] ; then
  REL=$(lsb_release -cs)
  if [ "$REL" = "bionic" ] ; then
    REL="xenial"
  fi
  apt-get install -y apt-transport-https ca-certificates curl software-properties-common
  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  #add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) edge"
  add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $REL edge"
  apt-get update
  apt-get install -y docker-ce
  exit 0
fi

if [ "$CMD" = "tools" ] ; then
  . /etc/profile

  if [ "${LC_ALL}" = "" ] ; then
    export LC_ALL=en_US.UTF-8
    update-locale LC_ALL=en_US.UTF-8
  fi

  alist="pv tree sshfs sendemail libnet-ssleay-perl libio-socket-ssl-perl"
  if [ "$(systemd-detect-virt)" = "kvm" ] ; then
    alist="$alist qemu-guest-agent"
  fi

  for i in $alist ; do
    if [ "$( which $i )" = "" ] ; then
      apt-get update
      apt-get install -y $alist
      break
    fi 
  done
 
  VER=$( docker-compose --version | awk '{ print $3 }' )
  VER=${VER%,}
  if [ "$VER" != "$COMPOSE" ] ; then
    curl -L https://github.com/docker/compose/releases/download/${COMPOSE}/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
    chmod +x /usr/local/bin/docker-compose
    docker-compose --version
  fi

  VER=$( docker-machine  --version | awk '{ print $3 }' )
  VER=${VER%,}
  if [ "$VER" != "$MACHINE" ] ; then
    curl -L https://github.com/docker/machine/releases/download/v${MACHINE}/docker-machine-`uname -s`-`uname -m` >/usr/local/bin/docker-machine
    chmod +x /usr/local/bin/docker-machine
    docker-machine --version
  fi
 
  VER=$( /usr/local/bin/restic version | grep ^rest | awk '{ print $2 }' )
  if [ "$VER" != "$RESTIC" ] ; then 
    curl -L https://github.com/restic/restic/releases/download/v${RESTIC}/restic_${RESTIC}_linux_amd64.bz2 | bunzip2 > /usr/local/bin/restic
    chmod +x /usr/local/bin/restic
    restic version | grep ^restic
  fi

  VER=$( /usr/local/bin/ngrok --version | cut -d" " -f3 )
  if [ "$VER" != "$NGROK" ] ; then
    cd /usr/local/bin
    rm -f ngrok.zip
    curl -L https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip > /usr/local/bin/ngrok.zip
    gunzip -S .zip ngrok.zip
    chmod a+x ngrok
  fi

  exit 0

fi
